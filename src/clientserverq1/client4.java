/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientserverq1;

import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.ArrayList;

/**
 *
 * @author shubham
 */
public class client4 extends javax.swing.JFrame {

    /**
     * Creates new form client4
     */
    public client4() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Client 4");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Length of the string");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Convert string to UpperCase");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Convert LowerCase");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Concatenate two Strings");

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setText("Compare two Strings");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("Find the substring from the given string(str,substr)");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(133, 133, 133)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jRadioButton1))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jRadioButton3)
                                .addComponent(jRadioButton2)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jRadioButton5)
                                .addComponent(jRadioButton4)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jRadioButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jTextField1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selected=0;
        while(true){
            if(jRadioButton1.isSelected())
            {    selected=1; break; }
            else if(jRadioButton2.isSelected())
            {    selected=2; break; }
            else if(jRadioButton3.isSelected())
            {    selected=3; break; }
            else if(jRadioButton4.isSelected())
            {    selected=4; break; }
            else if(jRadioButton5.isSelected())
            {    selected=5; break; }
            else if(jRadioButton6.isSelected())
            {    selected=6; break; }
            else{    break;   }
        }
        System.out.println("Selected Radio Button is "+selected);
        String[] s;
        switch(selected){
            case 1:
                System.out.println("Length of String "+jTextField1.getText()+" is:- ");
                //make a call to the server.
                try{
                DatagramSocket clientSocket = new DatagramSocket(9003);
                InetAddress IPAddress = InetAddress.getByName("localhost");
                byte[] sendData = new byte[1024];
                byte[] receiveData = new byte[1024];
                String sentence = "len,".concat(jTextField1.getText());
                sendData = sentence.getBytes();
                DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 9876);
                clientSocket.send(sendPacket);
                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
//                System.out.println(clientSocket.getPort());
                clientSocket.receive(receivePacket);
//                System.out.println(clientSocket.getPort());
                String modifiedSentence = new String(receivePacket.getData());
                System.out.println("Length of the String:- " + modifiedSentence);
                jLabel2.setText("Length of the String:-  "+modifiedSentence);
                jTextField1.setText("");
                clientSocket.close();
                } catch (Exception ex) {
//                    Logger.getLogger(client1.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("exception:- "+ex);
                }
                //print the vowels
                break;
            case 2:
                System.out.println("String "+jTextField1.getText()+" in Uppercase:- ");
                //make a call to the server.
                try{
                DatagramSocket clientSocket = new DatagramSocket(9003);
                InetAddress IPAddress = InetAddress.getByName("localhost");
                byte[] sendData = new byte[1024];
                byte[] receiveData = new byte[1024];
                String sentence = "upper,".concat(jTextField1.getText());
                sendData = sentence.getBytes();
                DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 9876);
                clientSocket.send(sendPacket);
                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
//                System.out.println(clientSocket.getPort());
                clientSocket.receive(receivePacket);
//                System.out.println(clientSocket.getPort());
                String modifiedSentence = new String(receivePacket.getData());
                System.out.println("String in UpperCase:- " + modifiedSentence);
                jLabel2.setText("String in UpperCase: - "+modifiedSentence);
                jTextField1.setText("");
                clientSocket.close();
                } catch (Exception ex) {
//                    Logger.getLogger(client1.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("exception:- "+ex);
                }
                    
                break;
            case 3:
                System.out.println("String "+jTextField1.getText()+" in Lowercase:- ");
                //make a call to the server.
try{
                DatagramSocket clientSocket = new DatagramSocket(9003);
                InetAddress IPAddress = InetAddress.getByName("localhost");
                byte[] sendData = new byte[1024];
                byte[] receiveData = new byte[1024];
                String sentence = "lower,".concat(jTextField1.getText());
                sendData = sentence.getBytes();
                DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 9876);
                clientSocket.send(sendPacket);
                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
//                System.out.println(clientSocket.getPort());
                clientSocket.receive(receivePacket);
//                System.out.println(clientSocket.getPort());
                String modifiedSentence = new String(receivePacket.getData());
                System.out.println("String in LowerCase:- " + modifiedSentence);
                jLabel2.setText("String in LowerCase:-: - "+modifiedSentence);
                jTextField1.setText("");
                clientSocket.close();
                } catch (Exception ex) {
//                    Logger.getLogger(client1.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("exception:- "+ex);
                }                
//print the vowels
                break;
            case 4:
                s= jTextField1.getText().split(",");
                System.out.println("String "+s[0]+" + "+s[1]);
                //make a call to the server.

try{
                DatagramSocket clientSocket = new DatagramSocket(9003);
                InetAddress IPAddress = InetAddress.getByName("localhost");
                byte[] sendData = new byte[1024];
                byte[] receiveData = new byte[1024];
                String sentence = "concat,".concat(jTextField1.getText());
                sendData = sentence.getBytes();
                DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 9876);
                clientSocket.send(sendPacket);
                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
//                System.out.println(clientSocket.getPort());
                clientSocket.receive(receivePacket);
//                System.out.println(clientSocket.getPort());
                String modifiedSentence = new String(receivePacket.getData());
                System.out.println("Concatenated string is:- " + modifiedSentence);
                jLabel2.setText("Concatenated string is:- "+modifiedSentence);
                jTextField1.setText("");
                clientSocket.close();
                } catch (Exception ex) {
//                    Logger.getLogger(client1.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("exception:- "+ex);
                }                //print the vowels
                break;
            case 5:
                s= jTextField1.getText().split(",");
                System.out.println("Given Strings are :- "+s[0]+" and "+s[1]);
                //make a call to the server.
                try{
                DatagramSocket clientSocket = new DatagramSocket(9003);
                InetAddress IPAddress = InetAddress.getByName("localhost");
                byte[] sendData = new byte[1024];
                byte[] receiveData = new byte[1024];
                String sentence = "compare,".concat(jTextField1.getText());
                sendData = sentence.getBytes();
                DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 9876);
                clientSocket.send(sendPacket);
                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
//                System.out.println(clientSocket.getPort());
                clientSocket.receive(receivePacket);
//                System.out.println(clientSocket.getPort());
                String modifiedSentence = new String(receivePacket.getData());
                System.out.println("Comparision result:- " + modifiedSentence);
                jLabel2.setText("Comparision result: - "+modifiedSentence);
                jTextField1.setText("");
                clientSocket.close();
                } catch (Exception ex) {
//                    Logger.getLogger(client1.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("exception:- "+ex);
                }//print the vowels
                break;
            case 6:
                s= jTextField1.getText().split(",");
                System.out.println("Given Strings is:- "+s[0]+" and substring to find:- "+s[1]);
                //make a call to the server.
                try{
                DatagramSocket clientSocket = new DatagramSocket(9003);
                InetAddress IPAddress = InetAddress.getByName("localhost");
                byte[] sendData = new byte[1024];
                byte[] receiveData = new byte[1024];
                String sentence = "substr,".concat(jTextField1.getText());
                sendData = sentence.getBytes();
                DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 9876);
                clientSocket.send(sendPacket);
                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
//                System.out.println(clientSocket.getPort());
                clientSocket.receive(receivePacket);
//                System.out.println(clientSocket.getPort());
                String modifiedSentence = new String(receivePacket.getData());
                System.out.println("Substring in the given string are:- " + modifiedSentence);
                jLabel2.setText("Substring in the given string are: - "+modifiedSentence);
                jTextField1.setText("");
                clientSocket.close();
                } catch (Exception ex) {
//                    Logger.getLogger(client1.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("exception:- "+ex);
                }//print the vowels
                break;
            
            default:
                jLabel2.setText("Please choose an option.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new client4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
